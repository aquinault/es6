{"version":3,"sources":["imports/service1.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;uBAAoB,SAAS;;;;yBACP,WAAW;;;;kBAClB,IAAI;;;;AAEnB,IAAI,KAAK,GAAG,uBAAU,KAAK,CAAC;;IAGtB,IAAI;WAAJ,IAAI;0BAAJ,IAAI;;+BAAJ,IAAI;;;YAAJ,IAAI;;SAAJ,IAAI;GAAS,KAAK;;AAIxB,SAAS,OAAO,CAAC,GAAG,EAAE;;;;AAIpB,SAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;CAC1B;;IAEY,QAAQ;AACN,WADF,QAAQ,GACS;QAAd,KAAK,gCAAG,KAAK;;0BADhB,QAAQ;;AAEb,QAAI,CAAC,IAAI,GAAG,eAAe,CAAC;AAC5B,WAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;GAEtC;;eALQ,QAAQ;;WAMb,gBAAE;AACR,6BAAU,OAAO,CAAC,iBAAiB,CAAC,CAAC;KAClC;;;;;;;;;;;;;;;;;;;mCAiBS;UACR,KAAK;;;;;mBAAS,IAAI,CAAC,GAAG,EAAE;;;AAAxB,iBAAK;;AACT,mBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,mBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gDACZ,KAAK;;;;;;;KACT;;;mCACW;UACV,KAAK;;;;;mBAAS,IAAI,CAAC,MAAM,EAAE;;;AAA3B,iBAAK;;AACT,mBAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAC5B,mBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gDACZ,KAAK;;;;;;;KACT;;;mCACO;UACN,IAAI,EAOJ,KAAK;;;;AAPL,gBAAI,GAAG,IAAI,IAAI,CAAC;AAChB,mBAAK,EAAE,+BAA+B;AACtC,kBAAI,EAAE,gBAAgB;AACtB,oBAAM,EAAE;AACJ,oBAAI,EAAE,UAAU;eACnB;aACJ,CAAC;;mBACgB,IAAI,CAAC,IAAI,EAAE;;;AAAzB,iBAAK;gDACF,KAAK;;;;;;;KAET;;;WACG,gBAAE;AACR,6BAAU,UAAU,EAAE,CAAC;KACpB;;;SAnDQ,QAAQ;;;QAAR,QAAQ,GAAR,QAAQ","file":"imports/service1.js","sourcesContent":["import restify from 'restify';\r\nimport Mongorito from 'mongorito';\r\nimport co from 'co';\r\n\r\nvar Model = Mongorito.Model;\r\n\r\n\r\nclass Post extends Model {\r\n}\r\n\r\n\r\nfunction onerror(err) {\r\n  // log any uncaught errors\r\n  // co will not throw any errors you do not handle!!!\r\n  // HANDLE ALL YOUR ERRORS!!!\r\n  console.error(err.stack);\r\n}\r\n\r\nexport class Service1{\r\n    constructor(debug = false){\r\n        this.name = 'Service1 API!';\r\n        console.log(\"Loading \", this.name); //this == the object instance.\r\n\r\n    }\r\n    init(){\r\n\t\tMongorito.connect('localhost/blog2');\r\n    }/*\r\n    savePost(){\r\n\t\tco(function *(){\r\n\t\t  // yield any promise\r\n\t\t\tvar post = new Post({\r\n\t\t\t    title: 'Node.js with --harmony rocks!',\r\n\t\t\t    body: 'Long post body',\r\n\t\t\t    author: {\r\n\t\t\t        name: 'John Doe'\r\n\t\t\t    }\r\n\t\t\t});\r\n\r\n    \t\tconsole.log(post.save);\r\n\t\t\tyield post.save();\r\n\t\t\tconsole.log(\"Saving Post1\");\t\t\r\n\t\t}).catch(onerror);\r\n    }  */ \r\n    *findPosts() {\r\n\t\tvar posts = yield Post.all();\r\n\t\tconsole.log(\"Find Posts\");\r\n\t\tconsole.log(posts);\r\n\t\treturn posts;  \t\t\r\n    }\r\n    *removePosts() {\r\n\t\tvar posts = yield Post.remove();\r\n\t\tconsole.log(\"Remove Posts\");\r\n\t\tconsole.log(posts);\r\n\t\treturn posts;  \t\t\r\n    }\r\n    *addPost() {\r\n\t\tvar post = new Post({\r\n\t\t    title: 'Node.js with --harmony rocks!',\r\n\t\t    body: 'Long post body',\r\n\t\t    author: {\r\n\t\t        name: 'John Doe'\r\n\t\t    }\r\n\t\t});\r\n\t\tlet post2 = yield post.save();\r\n\t\treturn post2;\r\n\t\r\n    }\r\n    exit(){\r\n\t\tMongorito.disconnect();\r\n    }\r\n\r\n}\r\n\r\n//module.exports = Service1; //set what can be imported from this file\r\n"],"sourceRoot":"D:\\code\\rest\\es6"}